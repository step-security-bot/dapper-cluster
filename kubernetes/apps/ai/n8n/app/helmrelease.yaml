---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:

    resources:
      requests:
        cpu: 20m
        memory: 128M
      limits:
        memory: 512M

    controllers:
      n8n:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: n8n-postgres-secret
        containers:
          app:
            image:
              repository: docker.io/n8nio/n8n
              tag: 1.83.2
            env:
              GENERIC_TIMEZONE: ${TIME_ZONE}
              N8N_PORT: &port 80
              N8N_HOST: &host "n8n.${SECRET_DOMAIN}"
              WEBHOOK_URL: "https://n8n.${SECRET_DOMAIN}"
              N8N_USER_FOLDER: /config

              # User management
              EXTERNAL_HOOK_FILES: /config/.n8n/hooks.js
              N8N_FORWARD_AUTH_HEADER: X-authentik-email

              # App Configuration
              N8N_PERSONALIZATION_ENABLED: false
              N8N_VERSION_NOTIFICATIONS_ENABLED: true
              N8N_HIRING_BANNER_ENABLED: false
              N8N_USER_MANAGEMENT_DISABLED: true
              N8N_TEMPLATES_ENABLED: false
              N8N_PROXY_HOPS: "1"

              # Logging
              N8N_LOG_LEVEL: verbose
              N8N_LOG_OUTPUT: console, file
              N8N_DIAGONISTICS_ENABLED: true
              N8N_METRICS: true
              NODE_FUNCTION_ALLOW_EXTERNAL: databricks/sql # externl packages

              # DB Related
              DB_TYPE: postgresdb
              DB_POSTGRESDB_PORT: 5432
            envFrom:
              #N8N_ENCRYPTION_KEY
              - secretRef:
                  name: n8n-secret
    podSecurityContext:
      supplementalGroups: [140]
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 150
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities: { drop: ["ALL"] }
      seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: n8n
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          authentik.home.arpa/internal: "true"
          nginx.ingress.kubernetes.io/auth-signin: "https://n8n.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN/./-}-tls
    persistence:
      config:
        enabled: true
        existingClaim: n8n
      cache:
        type: emptyDir
        globalMounts:
          - path: /config/.cache
      files:
        enabled: true
        existingClaim: n8n-files
        globalMounts:
          - path: /files
