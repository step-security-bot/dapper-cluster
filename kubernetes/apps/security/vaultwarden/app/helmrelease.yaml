---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vaultwarden

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage
  values:
    controllers:
      vaultwarden:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.8
            envFrom:
              - secretRef: &postgres_secret
                    name: &secret vaultwarden-postgres-secret
        containers:
          app:
            image:
              repository: vaultwarden/server
              tag: 1.33.2@sha256:87edb99945da91bd7504ac1435495595af2e89ad2c7adc151ae5bf091ec8baf2

            env:
              TZ: ${TIME_ZONE}
              DATA_FOLDER: "config"
              ICON_CACHE_FOLDER: "config/icon_cache"
              ATTACHMENTS_FOLDER: "config/attachments"
              DOMAIN: https://vault.${SECRET_DOMAIN}
              SIGNUPS_ALLOWED: false
              SHOW_PASSWORD_HINT: false
              SMTP_FROM: vaultwarden@${SECRET_DOMAIN}
              SMTP_FROM_NAME: Vaultwarden
              SMTP_HOST: smtp-relay.network.svc.cluster.local
              SMTP_SECURITY: "off"
              SMTP_PORT: 25
              SMTP_SSL: "true"
              SMTP_EXPLICIT_TLS: "true"
              WEBSOCKET_ADDRESS: 0.0.0.0
              WEBSOCKET_ENABLED: true
              WEBSOCKET_PORT: 3012
            envFrom:
              - secretRef:
                  name: vaultwarden-secret
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 150
            fsGroup: 140
            fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 80
          websocket:
            enabled: true
            port: &websocket-port 3012

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        className: external
        hosts:
          - host: &host vault.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
              - path: /notifications/hub/negotiate
                service:
                  identifier: app
                  port: *port
              - path: /notifications/hub
                service:
                  identifier: app
                  port: *websocket-port
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-tls"
    persistence:
      config:
        existingClaim: vaultwarden
        globalMounts:
          - path: /config
